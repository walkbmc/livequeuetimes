{"version":3,"sources":["../lib/promise.js"],"names":["Promise","require","onPossiblyUnhandledRejection","error","module","exports"],"mappings":"AAAA;;AAEA;;AAEA,IAAIA,UAAUC,QAAQ,UAAR,CAAd;;AAEA;AACA;AACA;AACAD,QAAQE,4BAAR,CAAqC,UAASC,KAAT,EAAe;AAChD,UAAMA,KAAN;AACH,CAFD;;AAIAC,OAAOC,OAAP,GAAiBL,OAAjB","file":"promise.js","sourcesContent":["\"use strict\";\r\n\r\n// make our own wrapper for Promise so we can configure bluebird exactly how we want it everywhere\r\n\r\nvar Promise = require(\"bluebird\");\r\n\r\n// handle errors from within Promises correctly!\r\n//  Promises by default just die if there is an error, which makes debugging the worst thing ever.\r\n//  who decided that was sane?\r\nPromise.onPossiblyUnhandledRejection(function(error){\r\n    throw error;\r\n});\r\n\r\nmodule.exports = Promise;"]}