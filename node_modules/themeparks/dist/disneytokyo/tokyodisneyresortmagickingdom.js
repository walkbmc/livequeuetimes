"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DisneyTokyoPark = require("./index");

var GeoLocation = require("../geoLocation");

/**
 * Tokyo Disney Resort - Magic Kingdom
 * @class
 * @extends DisneyTokyoPark
 */

var TokyoDisneyResortMagicKingdom = function (_DisneyTokyoPark) {
    _inherits(TokyoDisneyResortMagicKingdom, _DisneyTokyoPark);

    /**
     * Create a new TokyoDisneyResortMagicKingdom object
     */
    function TokyoDisneyResortMagicKingdom() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _classCallCheck(this, TokyoDisneyResortMagicKingdom);

        options.name = options.name || "Tokyo Disney Resort - Magic Kingdom";
        options.timezone = options.timezone || "Asia/Tokyo";

        // set park's location as it's entrance
        options.latitude = options.latitude || 35.634848;
        options.longitude = options.longitude || 139.879295;

        // Magic Kingdom Park ID
        options.park_id = options.park_id || "tdl";
        options.park_kind = options.park_kind || 1;

        // Geofence corners
        options.location_min = new GeoLocation({
            latitude: 35.63492433179704,
            longitude: 139.87755417823792
        });
        options.location_max = new GeoLocation({
            latitude: 35.63234322451754,
            longitude: 139.8831331729889
        });

        // inherit from base class
        return _possibleConstructorReturn(this, (TokyoDisneyResortMagicKingdom.__proto__ || Object.getPrototypeOf(TokyoDisneyResortMagicKingdom)).call(this, options));
    }

    return TokyoDisneyResortMagicKingdom;
}(DisneyTokyoPark);

module.exports = TokyoDisneyResortMagicKingdom;
//# sourceMappingURL=tokyodisneyresortmagickingdom.js.map