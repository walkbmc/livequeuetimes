{"version":3,"sources":["../../lib/hersheys/index.js"],"names":["Park","require","Moment","HersheyPark","options","name","timezone","latitude","longitude","useragent","Promise","resolve","reject","FetchRideNames","then","rideNames","HTTP","url","waitTimes","wait","rideObject","i","ride","id","GetRideObject","WaitTime","closed","bind","Cache","Wrap","rideData","today","tz","Timezone","endDate","clone","add","todo","day","isSameOrBefore","push","step","c","shift","FetchDayOpeningHours","hours","Schedule","SetDate","process","nextTick","date","format","startOf","openingHours","matches","exec","openingTime","closingTime","type","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["// include core Park class\r\nvar Park = require(\"../park\");\r\n\r\nvar Moment = require(\"moment-timezone\");\r\n\r\n/**\r\n * Implements the Hershey Park API framework.\r\n * @class\r\n * @extends Park\r\n */\r\nclass HersheyPark extends Park {\r\n    constructor(options = {}) {\r\n        options.name = options.name || \"Hershey Park\";\r\n        options.timezone = options.timezone || \"America/New_York\";\r\n        options.latitude = options.latitude || 40.287681;\r\n        options.longitude = options.longitude || -76.658579;\r\n\r\n        options.useragent = \"Hersheypark Android App\";\r\n\r\n        // inherit from base class\r\n        super(options);\r\n    }\r\n\r\n    FetchWaitTimes() {\r\n        return new Promise(function(resolve, reject) {\r\n            // grab ride names first\r\n            this.FetchRideNames().then(function(rideNames) {\r\n                this.HTTP({\r\n                    url: \"https://hpapp.hersheypa.com/v1/rides/wait\"\r\n                }).then(function(waitTimes) {\r\n                    if (!waitTimes.wait) return reject(\"API missing expecting format\");\r\n\r\n                    var rideObject;\r\n                    for (var i = 0, ride; ride = waitTimes.wait[i++];) {\r\n                        if (!rideNames[ride.id]) continue;\r\n\r\n                        rideObject = this.GetRideObject({\r\n                            id: ride.id,\r\n                            name: rideNames[ride.id].name,\r\n                        });\r\n\r\n                        rideObject.WaitTime = ride.wait;\r\n                    }\r\n\r\n                    // closed rides are in this custom array\r\n                    for (i = 0, ride; ride = waitTimes.closed[i++];) {\r\n                        if (!rideNames[ride]) continue;\r\n\r\n                        rideObject = this.GetRideObject({\r\n                            id: ride,\r\n                            name: rideNames[ride].name,\r\n                        });\r\n\r\n                        rideObject.WaitTime = -1;\r\n                    }\r\n\r\n                    resolve();\r\n                }.bind(this), reject);\r\n            }.bind(this), reject);\r\n        }.bind(this));\r\n    }\r\n\r\n    FetchRideNames() {\r\n        return this.Cache.Wrap(\"ridenames\", function() {\r\n            return new Promise(function(resolve, reject) {\r\n                // fetch fresh ridenames\r\n                this.HTTP({\r\n                    url: \"https://hpapp.hersheypa.com/v1/rides\"\r\n                }).then(function(rideData) {\r\n                    var rideNames = {};\r\n                    for (var i = 0, ride; ride = rideData[i++];) {\r\n                        rideNames[ride.id] = {\r\n                            name: ride.name,\r\n                            latitude: ride.latitude,\r\n                            longitude: ride.longitude\r\n                        };\r\n                    }\r\n                    resolve(rideNames);\r\n                }.bind(this), reject);\r\n            }.bind(this));\r\n        }.bind(this), 60 * 60 * 24);\r\n    }\r\n\r\n    FetchOpeningTimes() {\r\n        return new Promise(function(resolve, reject) {\r\n            // get 30 days of opening hours\r\n            var today = Moment().tz(this.Timezone);\r\n            var endDate = today.clone().add(30, \"day\");\r\n            var todo = [];\r\n            for (var day = today.clone(); day.isSameOrBefore(endDate); day.add(1, \"day\")) {\r\n                todo.push(day.clone());\r\n            }\r\n\r\n            var step = function() {\r\n                var c = todo.shift();\r\n\r\n                if (!c) {\r\n                    return resolve();\r\n                } else {\r\n                    this.FetchDayOpeningHours(c).then(function(hours) {\r\n                        this.Schedule.SetDate(hours);\r\n\r\n                        process.nextTick(step);\r\n                    }.bind(this), reject);\r\n                }\r\n            }.bind(this);\r\n\r\n            process.nextTick(step);\r\n        }.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Fetch the opening hours for a specific day.\r\n     * @param {MomentJS} date Date to request opening hours for (should be in correct timezone)\r\n     */\r\n    FetchDayOpeningHours(date) {\r\n        if (!date) return Promise.reject(\"Invalid date object sent\");\r\n        return this.Cache.Wrap(`openinghours_${date.format(\"YYYY-MM-DD\")}`, function() {\r\n            return new Promise(function(resolve, reject) {\r\n                this.HTTP({\r\n                    url: `https://hpapp.hersheypa.com/v1/hours/${date.startOf(\"day\").format(\"X\")}`,\r\n                }).then(function(openingHours) {\r\n                    for (var i = 0, hours; hours = openingHours[i++];) {\r\n                        if (hours.id == 9) {\r\n                            var matches = /([0-9]+:[0-9]{2})\\s*([AP]M).*([0-9]+:[0-9]{2})\\s*([AP]M)/.exec(hours.hours);\r\n                            if (matches) {\r\n                                return resolve({\r\n                                    openingTime: Moment.tz(`${date.format(\"YYYY-MM-DD\")}T${matches[1]}${matches[2]}`, \"YYYY-MM-DDTHH:mmA\", this.Timezone),\r\n                                    closingTime: Moment.tz(`${date.format(\"YYYY-MM-DD\")}T${matches[3]}${matches[4]}`, \"YYYY-MM-DDTHH:mmA\", this.Timezone),\r\n                                    type: \"Operating\"\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // park not set or missing hours, so closed!\r\n                    return resolve({\r\n                        date: date,\r\n                        type: \"Closed\"\r\n                    });\r\n                }.bind(this), reject);\r\n            }.bind(this));\r\n        }.bind(this), 60 * 60 * 24 * 30);\r\n    }\r\n}\r\n\r\n// export the class\r\nmodule.exports = HersheyPark;"]}