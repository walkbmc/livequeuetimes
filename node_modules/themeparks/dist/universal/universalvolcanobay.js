"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UniversalPark = require("./index");

/**
 * Universal Volcano Bay
 * @class
 * @extends UniversalPark
 */

var UniversalVolcanoBay = function (_UniversalPark) {
        _inherits(UniversalVolcanoBay, _UniversalPark);

        /**
         * Create a new UniversalVolcanoBay object
         */
        function UniversalVolcanoBay() {
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                _classCallCheck(this, UniversalVolcanoBay);

                options.name = options.name || "Universal Volcano Bay";
                options.timezone = options.timezone || "America/New_York";

                // set park's location as it's entrance
                options.latitude = options.latitude || 28.4623;
                options.longitude = options.longitude || -81.4707;

                // Volcano Bay park ID park ID
                options.park_id = options.park_id || "13801";

                // inherit from base class
                return _possibleConstructorReturn(this, (UniversalVolcanoBay.__proto__ || Object.getPrototypeOf(UniversalVolcanoBay)).call(this, options));
        }

        return UniversalVolcanoBay;
}(UniversalPark);

module.exports = UniversalVolcanoBay;
//# sourceMappingURL=universalvolcanobay.js.map